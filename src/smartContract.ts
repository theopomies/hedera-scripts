import {
  AccountBalanceQuery,
  AccountId,
  ContractCreateTransaction,
  ContractExecuteTransaction,
  ContractFunctionParameters,
  ContractId,
  FileCreateTransaction,
  FileId,
  Hbar,
  PrivateKey,
  TokenId,
  TransactionRecordQuery,
  TransactionResponse,
} from "@hashgraph/sdk";
import { BigNumber } from "bignumber.js";
import { client } from "./client";

export async function storeContractFile(): Promise<FileId | null> {
  const bytecode = {
    functionDebugData: {},
    generatedSources: [],
    linkReferences: {},
    object:
      "608060405234801561001057600080fd5b50610b56806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633a04033c146100515780634753b51b1461006d5780637f6314d014610089578063a4aa39b1146100a5575b600080fd5b61006b60048036038101906100669190610718565b6100c1565b005b610087600480360381019061008291906106d8565b61011e565b005b6100a3600480360381019061009e91906106d8565b610177565b005b6100bf60048036038101906100ba9190610718565b6101d0565b005b60006100cf8584868561022d565b9050601660030b8114610117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010e9061094c565b60405180910390fd5b5050505050565b600061012a838361034b565b9050601660030b8114610172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101699061090c565b60405180910390fd5b505050565b60006101838383610463565b9050601660030b81146101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c29061096c565b60405180910390fd5b505050565b60006101de8585858561057b565b9050601660030b8114610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d9061092c565b60405180910390fd5b5050505050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff1663eca3691760e01b8888888860405160240161026a94939291906108c7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102d49190610887565b6000604051808303816000865af19150503d8060008114610311576040519150601f19603f3d011682016040523d82523d6000602084013e610316565b606091505b50915091508161032757601561033c565b8080602001905181019061033b919061077f565b5b60030b92505050949350505050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff1663099794e860e01b868660405160240161038492919061089e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103ee9190610887565b6000604051808303816000865af19150503d806000811461042b576040519150601f19603f3d011682016040523d82523d6000602084013e610430565b606091505b509150915081610441576015610456565b80806020019051810190610455919061077f565b5b60030b9250505092915050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff166349146bde60e01b868660405160240161049c92919061089e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105069190610887565b6000604051808303816000865af19150503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50915091508161055957601561056e565b8080602001905181019061056d919061077f565b5b60030b9250505092915050565b600080600061016773ffffffffffffffffffffffffffffffffffffffff16635cfc901160e01b888888886040516024016105b894939291906108c7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106229190610887565b6000604051808303816000865af19150503d806000811461065f576040519150601f19603f3d011682016040523d82523d6000602084013e610664565b606091505b50915091508161067557601561068a565b80806020019051810190610689919061077f565b5b60030b92505050949350505050565b6000813590506106a881610adb565b92915050565b6000815190506106bd81610af2565b92915050565b6000813590506106d281610b09565b92915050565b600080604083850312156106ef576106ee610a32565b5b60006106fd85828601610699565b925050602061070e85828601610699565b9150509250929050565b6000806000806080858703121561073257610731610a32565b5b600061074087828801610699565b945050602061075187828801610699565b935050604061076287828801610699565b9250506060610773878288016106c3565b91505092959194509250565b60006020828403121561079557610794610a32565b5b60006107a3848285016106ae565b91505092915050565b6107b5816109b3565b82525050565b60006107c68261098c565b6107d08185610997565b93506107e08185602086016109ff565b80840191505092915050565b6107f5816109d2565b82525050565b60006108086011836109a2565b915061081382610a37565b602082019050919050565b600061082b6013836109a2565b915061083682610a60565b602082019050919050565b600061084e600f836109a2565b915061085982610a89565b602082019050919050565b60006108716010836109a2565b915061087c82610ab2565b602082019050919050565b600061089382846107bb565b915081905092915050565b60006040820190506108b360008301856107ac565b6108c060208301846107ac565b9392505050565b60006080820190506108dc60008301876107ac565b6108e960208301866107ac565b6108f660408301856107ac565b61090360608301846107ec565b95945050505050565b60006020820190508181036000830152610925816107fb565b9050919050565b600060208201905081810360008301526109458161081e565b9050919050565b6000602082019050818103600083015261096581610841565b9050919050565b6000602082019050818103600083015261098581610864565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006109be826109df565b9050919050565b60008160030b9050919050565b60008160070b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610a1d578082015181840152602081019050610a02565b83811115610a2c576000848401525b50505050565b600080fd5b7f446973736f6369617465204661696c6564000000000000000000000000000000600082015250565b7f4e4654205472616e73666572204661696c656400000000000000000000000000600082015250565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b7f4173736f6369617465204661696c656400000000000000000000000000000000600082015250565b610ae4816109b3565b8114610aef57600080fd5b50565b610afb816109c5565b8114610b0657600080fd5b50565b610b12816109d2565b8114610b1d57600080fd5b5056fea264697066735822122084414a2486c5057823cb2487cd57f54f44a10ccd1c36d5b4ae0ad133b8e8175164736f6c63430008070033",
    opcodes:
      "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB56 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A04033C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x4753B51B EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7F6314D0 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xA4AA39B1 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xCF DUP6 DUP5 DUP7 DUP6 PUSH2 0x22D JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP4 DUP4 PUSH2 0x34B JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP4 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2 SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE DUP6 DUP6 DUP6 DUP6 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP2 EQ PUSH2 0x226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xECA36917 PUSH1 0xE0 SHL DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x316 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x327 JUMPI PUSH1 0x15 PUSH2 0x33C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x99794E8 PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x384 SWAP3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x430 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x441 JUMPI PUSH1 0x15 PUSH2 0x456 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x49146BDE PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x49C SWAP3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x559 JUMPI PUSH1 0x15 PUSH2 0x56E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFC9011 PUSH1 0xE0 SHL DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x664 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x675 JUMPI PUSH1 0x15 PUSH2 0x68A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A8 DUP2 PUSH2 0xADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6BD DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D2 DUP2 PUSH2 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EE PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP6 DUP3 DUP7 ADD PUSH2 0x699 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x70E DUP6 DUP3 DUP7 ADD PUSH2 0x699 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x732 JUMPI PUSH2 0x731 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x740 DUP8 DUP3 DUP9 ADD PUSH2 0x699 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x751 DUP8 DUP3 DUP9 ADD PUSH2 0x699 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x762 DUP8 DUP3 DUP9 ADD PUSH2 0x699 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x773 DUP8 DUP3 DUP9 ADD PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP5 DUP3 DUP6 ADD PUSH2 0x6AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B5 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C6 DUP3 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x7D0 DUP2 DUP6 PUSH2 0x997 JUMP JUMPDEST SWAP4 POP PUSH2 0x7E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F5 DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH1 0x11 DUP4 PUSH2 0x9A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x813 DUP3 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B PUSH1 0x13 DUP4 PUSH2 0x9A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x836 DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84E PUSH1 0xF DUP4 PUSH2 0x9A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x859 DUP3 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x871 PUSH1 0x10 DUP4 PUSH2 0x9A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x87C DUP3 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893 DUP3 DUP5 PUSH2 0x7BB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x8C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8DC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x8E9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x8F6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x903 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x7EC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x925 DUP2 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x945 DUP2 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x965 DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x985 DUP2 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE DUP3 PUSH2 0x9DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA1D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA02 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x446973736F6369617465204661696C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4654205472616E73666572204661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4173736F6369617465204661696C656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP2 EQ PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0x9C5 JUMP JUMPDEST DUP2 EQ PUSH2 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 COINBASE 0x4A 0x24 DUP7 0xC5 SDIV PUSH25 0x23CB2487CD57F54F44A10CCD1C36D5B4AE0AD133B8E8175164 PUSH20 0x6F6C634300080700330000000000000000000000 ",
    sourceMap: "144:1504:0:-:0;;;;;;;;;;;;;;;;;;;",
  };

  //Get the contract bytecode
  const object = bytecode.object;

  //Create a file on Hedera and store the hex-encoded bytecode
  const fileCreateTx = new FileCreateTransaction().setContents(object);

  //Submit the file to the Hedera test network signing with the transaction fee payer key specified with the client
  const submitTx = await fileCreateTx.execute(client);

  //Get the receipt of the file create transaction
  const fileReceipt = await submitTx.getReceipt(client);

  //Get the file ID from the receipt
  const bytecodeFileId = fileReceipt.fileId;

  //Log the file ID
  console.log("The smart contract bytecode file ID is " + bytecodeFileId);

  return bytecodeFileId;
}

export async function createSmartContract(
  bytecodeFileId: string | FileId
): Promise<ContractId | null> {
  //Deploy the contract instance
  const contractTx = new ContractCreateTransaction()
    //The bytecode file ID
    .setBytecodeFileId(bytecodeFileId)
    //The max gas to reserve
    .setGas(2000000);

  //Submit the transaction to the Hedera test network
  const contractResponse = await contractTx.execute(client);

  //Get the receipt of the file create transaction
  const contractReceipt = await contractResponse.getReceipt(client);

  //Get the smart contract ID
  const newContractId = contractReceipt.contractId;

  //Log the smart contract ID
  console.log("The smart contract ID is " + newContractId);
  return newContractId;
}

export async function associateTokenFromContract(
  newContractId: ContractId,
  accountIdTest: AccountId,
  accountKeyTest: PrivateKey,
  tokenId: TokenId
): Promise<TransactionResponse> {
  //Associate the token to an account using the HTS contract
  const associateToken = new ContractExecuteTransaction()
    //The contract to call
    .setContractId(newContractId)
    //The gas for the transaction
    .setGas(2000000)
    //The contract function to call and parameters to pass
    .setFunction(
      "tokenAssociate",
      new ContractFunctionParameters()
        //The account ID to associate the token to
        .addAddress(accountIdTest.toSolidityAddress())
        //The token ID to associate to the account
        .addAddress(tokenId.toSolidityAddress())
    );

  //Sign with the account key and submit to the Hedera network
  const signTx = await associateToken.freezeWith(client).sign(accountKeyTest);

  //Submit the transaction
  const submitAssociateTx = await signTx.execute(client);

  //Get the receipt
  const txReceipt = await submitAssociateTx.getReceipt(client);

  //Get transaction status
  const txStatus = txReceipt.status;

  console.log("The associate transaction was " + txStatus.toString());
  return submitAssociateTx;
}

export async function getRecord(
  submitAssociateTx: TransactionResponse,
  accountIdTest: AccountId,
  tokenId: TokenId
) {
  //Get the token associate transaction record
  const childRecords = new TransactionRecordQuery()
    //Set children equal to true for child records
    .setIncludeChildren(true)
    //The parent transaction ID
    .setTransactionId(submitAssociateTx.transactionId)
    .setQueryPayment(new Hbar(10))
    .execute(client);

  console.log(
    "The transaction record for the associate transaction" +
      JSON.stringify((await childRecords).children)
  );

  //The balance of the account
  const accountBalance = await new AccountBalanceQuery()
    .setAccountId(accountIdTest)
    .execute(client);
  if (!accountBalance.tokens) throw new Error();

  console.log(
    "The " +
      tokenId +
      " should now be associated to my account: " +
      accountBalance.tokens.toString()
  );
}

export async function transferFromContract(
  newContractId: ContractId,
  tokenId: TokenId,
  treasuryAccountId: AccountId,
  accountIdTest: AccountId,
  treasuryKey: PrivateKey
) {
  //Transfer the new token to the account
  //Contract function params need to be in the order of the paramters provided in the tokenTransfer contract function
  const tokenTransfer = new ContractExecuteTransaction()
    .setContractId(newContractId)
    .setGas(2000000)
    .setFunction(
      "tokenTransfer",
      new ContractFunctionParameters()
        //The ID of the token
        .addAddress(tokenId.toSolidityAddress())
        //The account to transfer the tokens from
        .addAddress(treasuryAccountId.toSolidityAddress())
        //The account to transfer the tokens to
        .addAddress(accountIdTest.toSolidityAddress())
        //The number of tokens to transfer
        .addInt64(new BigNumber(100))
    );

  //Sign the token transfer transaction with the treasury account to authorize the transfer and submit
  const signTokenTransfer = await tokenTransfer
    .freezeWith(client)
    .sign(treasuryKey);

  //Submit transfer transaction
  const submitTransfer = await signTokenTransfer.execute(client);

  //Get transaction status
  const transferTxStatus = (await submitTransfer.getReceipt(client)).status;

  //Get the transaction status
  console.log("The transfer transaction status " + transferTxStatus.toString());

  //Verify the account received the 100 tokens
  const newAccountBalance = new AccountBalanceQuery()
    .setAccountId(accountIdTest)
    .execute(client);

  console.log(
    "My new account balance is " + (await newAccountBalance).tokens?.toString()
  );
}

export async function transferNftFromContract(
  newContractId: ContractId,
  tokenId: TokenId,
  serial: number,
  senderAccountId: AccountId,
  receiverAccountId: AccountId,
  treasuryKey: PrivateKey
) {
  //Transfer the new token to the account
  //Contract function params need to be in the order of the paramters provided in the tokenTransfer contract function
  const tokenTransfer = new ContractExecuteTransaction()
    .setContractId(newContractId)
    .setGas(2000000)
    .setFunction(
      "nftTransfer",
      new ContractFunctionParameters()
        //The ID of the token
        .addAddress(tokenId.toSolidityAddress())
        //The account to transfer the tokens from
        .addAddress(senderAccountId.toSolidityAddress())
        //The account to transfer the tokens to
        .addAddress(receiverAccountId.toSolidityAddress())
        //The serial of the token
        .addInt64(new BigNumber(serial))
    );

  //Sign the token transfer transaction with the treasury account to authorize the transfer and submit
  const signTokenTransfer = await tokenTransfer
    .freezeWith(client)
    .sign(treasuryKey);

  //Submit transfer transaction
  const submitTransfer = await signTokenTransfer.execute(client);

  //Get transaction status
  const transferTxStatus = (await submitTransfer.getReceipt(client)).status;

  //Get the transaction status
  console.log("The transfer transaction status " + transferTxStatus.toString());
}
